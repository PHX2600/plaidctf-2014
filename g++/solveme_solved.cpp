#include <iostream>
#include <cstring>
#include <string>
#include <cstdlib>
#include <algorithm>

int KEYS[16];
int key_off = 0;

int KEY(int i) {
  if (i<0 || i>15) return 0;
  else return KEYS[i];
}

char CKEY(int i) {
  if (i<0 || i>15) return 0;
  else return KEYS[i];
}

void SKEY(int i, int v) {
  if (i<0 || i>15) return;
  KEYS[i]=v;
}

//# 2 "solveme.cpp" 2
//# 47 "solveme.cpp"
template <int i>
struct key {
  static const int r = 0;
};

#define K(i,v)                                  \
  template <>                                   \
  struct key<i> {                               \
    static const int r = v;                     \
  };

#include "key2.h"

/*
  # 1 "key.h" 1
  template <> struct key<0> { static const int r = 97; };
  template <> struct key<1> { static const int r = 48; };
  template <> struct key<2> { static const int r = 48; };
  template <> struct key<3> { static const int r = 48; };
  template <> struct key<4> { static const int r = 100; };
  template <> struct key<5> { static const int r = 48; };
  template <> struct key<6> { static const int r = 48; };
  template <> struct key<7> { static const int r = 48; };
  template <> struct key<8> { static const int r = 111; };
  template <> struct key<9> { static const int r = 48; };
  template <> struct key<10> { static const int r = 48; };
  template <> struct key<11> { static const int r = 48; };
  template <> struct key<12> { static const int r = 99; };
  template <> struct key<13> { static const int r = 48; };
  template <> struct key<14> { static const int r = 48; };
  template <> struct key<15> { static const int r = 48; };
  # 59 "solveme.cpp" 2
*/

template <int a, int b, int c>
struct m {
  static const int r = (a-((a/b)*b));
};

#define M(a,b,c) (a-((a/b)*b))

typedef struct qrs {
  int q;
  int r;
  int s;
} qrs;

int recurse = 0;
qrs N(int a, int b, int c, int d) {
  qrs v;
  if (b==0 || ++recurse==1000000) {
    recurse = 0;
    v.r = a;
    v.q = c;
    v.s = d;
  } else {
    v = N((a-1),((M((b),(257),(257)))-1),(c+1),(((a+c)>>1)+(M((d),(257),(257)))));
  }

  return v;
}

template <int a, int b, int c, int d>
struct n {
  static const int q = n<(a-1),((M((b),(257),(257)))-1),(c+1),(((a+c)>>1)+(M((d),(257),(257))))>::q ;
  static const int r = n<(a-1),((M((b),(257),(257)))-1),(c+1),(((a+c)>>1)+(M((d),(257),(257))))>::r ;
  static const int s = n<(a-1),((M((b),(257),(257)))-1),(c+1),(((a+c)>>1)+(M((d),(257),(257))))>::s ;;
};

template <int a, int c, int d>
struct n<a,0,c,d> {
  static const int r = a;
  static const int q = c;
  static const int s = d;
};

template <int s, int t, int u, int v, int w, int x, int y, int z>
struct d {
  static const int r = (M(((n<(n<(n<z,v,z,0>::s),(n<x,t,x,0>::s),(n<z,v,z,0>::s),(n<x,t,x,0>::s)>::q),(n<(n<y,u,y,0>::s),(n<w,s,w,0>::s),(n<y,u,y,0>::s),(n<w,s,w,0>::s)>::q),(n<(n<z,v,z,0>::s),(n<x,t,x,0>::s),(n<z,v,z,0>::s),(n<x,t,x,0>::s)>::q),(n<(n<y,u,y,0>::s),(n<w,s,w,0>::s),(n<y,u,y,0>::s),(n<w,s,w,0>::s)>::q)>::q)),(257),(257)));
};

int D(int s, int t, int u, int v, int w, int x, int y, int z) {
  int zvz = N(z,v,z,0).s;
  int xtx = N(x,t,x,0).s;
  int yuy = N(y,u,y,0).s;
  int wsw = N(w,s,w,0).s;
  int zvzxtx = N((zvz),(xtx),(zvz),(xtx)).q;
  int yuywsw = N((yuy),(wsw),(yuy),(wsw)).q;
  int zvzxtxyuywsw = N((zvzxtx),(yuywsw),(zvzxtx),(yuywsw)).q;

  return M(zvzxtxyuywsw,257,257);
}

template <int b>
struct g {
  static const int r = ((3 + g<b-1>::r*7) ^ (g<b-1>::r*2))&255;
};

int G(int b) {
  if (b==0) return 13;
  else return ((3 + G(b-1)*7) ^ (G(b-1)*2))&255;
}

template <>
struct g<0> {
  static const int r = 13;
};

int U(const int f, const int n) {
  if (n==1) {
    return (M(((N((N((N((M((((1*f)*((1*f)*(1*f)))),(257),(257))),42,(M((((1*f)*((1*f)*(1*f)))),(257),(257))),0).s),(N((M(((1*f)),(257),(257))),43,(M(((1*f)),(257),(257))),0).s),(N((M((((1*f)*((1*f)*(1*f)))),(257),(257))),42,(M((((1*f)*((1*f)*(1*f)))),(257),(257))),0).s),(N((M(((1*f)),(257),(257))),43,(M(((1*f)),(257),(257))),0).s)).q),(N((N((M((((1*f)*(1*f))),(257),(257))),192,(M((((1*f)*(1*f))),(257),(257))),0).s),(N((M((1),(257),(257))),26,(M((1),(257),(257))),0).s),(N((M((((1*f)*(1*f))),(257),(257))),192,(M((((1*f)*(1*f))),(257),(257))),0).s),(N((M((1),(257),(257))),26,(M((1),(257),(257))),0).s)).q),(N((N((M((((1*f)*((1*f)*(1*f)))),(257),(257))),42,(M((((1*f)*((1*f)*(1*f)))),(257),(257))),0).s),(N((M(((1*f)),(257),(257))),43,(M(((1*f)),(257),(257))),0).s),(N((M((((1*f)*((1*f)*(1*f)))),(257),(257))),42,(M((((1*f)*((1*f)*(1*f)))),(257),(257))),0).s),(N((M(((1*f)),(257),(257))),43,(M(((1*f)),(257),(257))),0).s)).q),(N((N((M((((1*f)*(1*f))),(257),(257))),192,(M((((1*f)*(1*f))),(257),(257))),0).s),(N((M((1),(257),(257))),26,(M((1),(257),(257))),0).s),(N((M((((1*f)*(1*f))),(257),(257))),192,(M((((1*f)*(1*f))),(257),(257))),0).s),(N((M((1),(257),(257))),26,(M((1),(257),(257))),0).s)).q)).q)),(257),(257)))+(M(((N((N((N((M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),155,(M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s),(N((M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),8,(M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s),(N((M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),155,(M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s),(N((M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),8,(M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s)).q),(N((N((M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),221,(M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),0).s),(N((M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),246,(M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),0).s),(N((M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),221,(M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),0).s),(N((M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),246,(M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),0).s)).q),(N((N((M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),155,(M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s),(N((M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),8,(M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s),(N((M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),155,(M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s),(N((M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),8,(M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s)).q),(N((N((M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),221,(M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),0).s),(N((M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),246,(M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),0).s),(N((M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),221,(M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),0).s),(N((M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),246,(M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),0).s)).q)).q)),(257),(257)));
  }
  if (n==0) {
    return (M(((N((N((N((M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),162,(M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s),(N((M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),141,(M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s),(N((M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),162,(M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s),(N((M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),141,(M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s)).q),(N((N((M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),229,(M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),0).s),(N((M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),132,(M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),0).s),(N((M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),229,(M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),0).s),(N((M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),132,(M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),0).s)).q),(N((N((M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),162,(M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s),(N((M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),141,(M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s),(N((M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),162,(M(((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s),(N((M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),141,(M((((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257))),0).s)).q),(N((N((M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),229,(M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),0).s),(N((M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),132,(M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),0).s),(N((M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),229,(M(((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257))),0).s),(N((M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),132,(M(((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257))),0).s)).q)).q)),(257),(257)))+(M(((N((N((N((M((((1*f)*((1*f)*(1*f)))),(257),(257))),0,(M((((1*f)*((1*f)*(1*f)))),(257),(257))),0).s),(N((M(((1*f)),(257),(257))),222,(M(((1*f)),(257),(257))),0).s),(N((M((((1*f)*((1*f)*(1*f)))),(257),(257))),0,(M((((1*f)*((1*f)*(1*f)))),(257),(257))),0).s),(N((M(((1*f)),(257),(257))),222,(M(((1*f)),(257),(257))),0).s)).q),(N((N((M((((1*f)*(1*f))),(257),(257))),109,(M((((1*f)*(1*f))),(257),(257))),0).s),(N((M((1),(257),(257))),48,(M((1),(257),(257))),0).s),(N((M((((1*f)*(1*f))),(257),(257))),109,(M((((1*f)*(1*f))),(257),(257))),0).s),(N((M((1),(257),(257))),48,(M((1),(257),(257))),0).s)).q),(N((N((M((((1*f)*((1*f)*(1*f)))),(257),(257))),0,(M((((1*f)*((1*f)*(1*f)))),(257),(257))),0).s),(N((M(((1*f)),(257),(257))),222,(M(((1*f)),(257),(257))),0).s),(N((M((((1*f)*((1*f)*(1*f)))),(257),(257))),0,(M((((1*f)*((1*f)*(1*f)))),(257),(257))),0).s),(N((M(((1*f)),(257),(257))),222,(M(((1*f)),(257),(257))),0).s)).q),(N((N((M((((1*f)*(1*f))),(257),(257))),109,(M((((1*f)*(1*f))),(257),(257))),0).s),(N((M((1),(257),(257))),48,(M((1),(257),(257))),0).s),(N((M((((1*f)*(1*f))),(257),(257))),109,(M((((1*f)*(1*f))),(257),(257))),0).s),(N((M((1),(257),(257))),48,(M((1),(257),(257))),0).s)).q)).q)),(257),(257)));
  }
  return U( ( ((f+1)&7) ? ((f+1)&7) : (8) ), ((f)>>3) );
}

template <int f, int n>
struct u {
  static const int r = u<(((f+1)&7)?((f+1)&7):(8)),((f)>>3)>::r;
};

template <int f>
struct u<f,1> {
  static const int r = (m<((n<(n<(n<(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),42,(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),0>::s),(n<(m<((1*f)),(257),(257)>::r),43,(m<((1*f)),(257),(257)>::r),0>::s),(n<(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),42,(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),0>::s),(n<(m<((1*f)),(257),(257)>::r),43,(m<((1*f)),(257),(257)>::r),0>::s)>::q),(n<(n<(m<(((1*f)*(1*f))),(257),(257)>::r),192,(m<(((1*f)*(1*f))),(257),(257)>::r),0>::s),(n<(m<(1),(257),(257)>::r),26,(m<(1),(257),(257)>::r),0>::s),(n<(m<(((1*f)*(1*f))),(257),(257)>::r),192,(m<(((1*f)*(1*f))),(257),(257)>::r),0>::s),(n<(m<(1),(257),(257)>::r),26,(m<(1),(257),(257)>::r),0>::s)>::q),(n<(n<(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),42,(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),0>::s),(n<(m<((1*f)),(257),(257)>::r),43,(m<((1*f)),(257),(257)>::r),0>::s),(n<(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),42,(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),0>::s),(n<(m<((1*f)),(257),(257)>::r),43,(m<((1*f)),(257),(257)>::r),0>::s)>::q),(n<(n<(m<(((1*f)*(1*f))),(257),(257)>::r),192,(m<(((1*f)*(1*f))),(257),(257)>::r),0>::s),(n<(m<(1),(257),(257)>::r),26,(m<(1),(257),(257)>::r),0>::s),(n<(m<(((1*f)*(1*f))),(257),(257)>::r),192,(m<(((1*f)*(1*f))),(257),(257)>::r),0>::s),(n<(m<(1),(257),(257)>::r),26,(m<(1),(257),(257)>::r),0>::s)>::q)>::q)),(257),(257)>::r)+(m<((n<(n<(n<(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),155,(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),8,(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),155,(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),8,(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s)>::q),(n<(n<(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),221,(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),246,(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),221,(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),246,(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),0>::s)>::q),(n<(n<(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),155,(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),8,(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),155,(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),8,(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s)>::q),(n<(n<(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),221,(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),246,(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),221,(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),246,(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),0>::s)>::q)>::q)),(257),(257)>::r);
};

template <int f>
struct u<f,0> {
  static const int r = (m<((n<(n<(n<(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),162,(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),141,(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),162,(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),141,(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s)>::q),(n<(n<(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),229,(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),132,(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),229,(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),132,(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),0>::s)>::q),(n<(n<(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),162,(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),141,(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),162,(m<((((1*f)*((1*f)*(1*f)))*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),141,(m<(((1*f)*(((1*f)*(1*f))*((1*f)*(1*f))))),(257),(257)>::r),0>::s)>::q),(n<(n<(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),229,(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),132,(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),229,(m<((((1*f)*((1*f)*(1*f)))*((1*f)*((1*f)*(1*f))))),(257),(257)>::r),0>::s),(n<(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),132,(m<((((1*f)*(1*f))*((1*f)*(1*f)))),(257),(257)>::r),0>::s)>::q)>::q)),(257),(257)>::r)+(m<((n<(n<(n<(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),0,(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),0>::s),(n<(m<((1*f)),(257),(257)>::r),222,(m<((1*f)),(257),(257)>::r),0>::s),(n<(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),0,(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),0>::s),(n<(m<((1*f)),(257),(257)>::r),222,(m<((1*f)),(257),(257)>::r),0>::s)>::q),(n<(n<(m<(((1*f)*(1*f))),(257),(257)>::r),109,(m<(((1*f)*(1*f))),(257),(257)>::r),0>::s),(n<(m<(1),(257),(257)>::r),48,(m<(1),(257),(257)>::r),0>::s),(n<(m<(((1*f)*(1*f))),(257),(257)>::r),109,(m<(((1*f)*(1*f))),(257),(257)>::r),0>::s),(n<(m<(1),(257),(257)>::r),48,(m<(1),(257),(257)>::r),0>::s)>::q),(n<(n<(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),0,(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),0>::s),(n<(m<((1*f)),(257),(257)>::r),222,(m<((1*f)),(257),(257)>::r),0>::s),(n<(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),0,(m<(((1*f)*((1*f)*(1*f)))),(257),(257)>::r),0>::s),(n<(m<((1*f)),(257),(257)>::r),222,(m<((1*f)),(257),(257)>::r),0>::s)>::q),(n<(n<(m<(((1*f)*(1*f))),(257),(257)>::r),109,(m<(((1*f)*(1*f))),(257),(257)>::r),0>::s),(n<(m<(1),(257),(257)>::r),48,(m<(1),(257),(257)>::r),0>::s),(n<(m<(((1*f)*(1*f))),(257),(257)>::r),109,(m<(((1*f)*(1*f))),(257),(257)>::r),0>::s),(n<(m<(1),(257),(257)>::r),48,(m<(1),(257),(257)>::r),0>::s)>::q)>::q)),(257),(257)>::r);
};

int R(int a, int b) {
  return D(G(((a)<<2)),G(((a)<<2)+1),G(((a)<<2)+(1<<1)),G(((a)<<2)+(1<<1)|1),KEY(b),KEY(b+1 +1 +1 +1),KEY(b+1 +1 +1 +1 +1 +1 +1 +1),KEY(b+1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1));
};

template <int a, int b>
struct r {
  static const int rr = d<g<((a)<<2)>::r,g<((a)<<2)+1>::r,g<((a)<<2)+(1<<1)>::r,g<((a)<<2)+(1<<1)|1>::r,key<b>::r,key<b+1 +1 +1 +1>::r,key<b+1 +1 +1 +1 +1 +1 +1 +1>::r,key<b+1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1 +1>::r>::r;
};

int GG(int n) {
  return (M(((U(n,n|2))),(257),(257))) - R((n>>2),((n)&3));
}

template <int n>
struct gg {
  static const int r = (m<((u<n,n|2>::r)),(257),(257)>::r) - r<(n>>2),((n)&3)>::rr;
};

int VVV(int n) {
  return GG(n)|GG(n+1)|GG(n+2)|GG(n+3);
}

template <int n>
struct vvv {
  static const int r = gg<n>::r|gg<n+1>::r|gg<n+2>::r|gg<n+3>::r;
};

int VV(int n) {
  return VVV(0)|VVV(4)|VVV(8)|VVV(12);
}

template <int n>
struct vv {
  static const int r = vvv<0>::r|vvv<4>::r|vvv<8>::r|vvv<12>::r;
};

int num_perm = 0;
int num_calc = 0;

int calc(const char* key, int len) {

  std::memset(KEYS,0,sizeof(KEYS));
  //std::cout << "key length " << key.length() << " - " << len << std::endl;

  for (int i=0; i<len; i++) {
    SKEY(i,key[i]);
  }

  char skey[] = {CKEY(0), CKEY(1), CKEY(2),  CKEY(3),  CKEY(4),  CKEY(5),  CKEY(6),  CKEY(7),
                 CKEY(8), CKEY(9), CKEY(10), CKEY(11), CKEY(12), CKEY(13), CKEY(14), CKEY(15), 0};

  if ((++num_calc % 1000) == 0)
    std::cout << num_perm << ":" << skey << std::endl;
  //std::cout << GG(0) << ":" << GG(4) << ":" << GG(8) << ":" << GG(12) << std::endl;
  //}


  if (GG(0+key_off)==0 && GG(4+key_off)==0 && GG(8+key_off)==0 && GG(12+key_off)==0) {
    std::cout << "WOW:" << num_perm << ":" << skey << std::endl;
    //std::exit(1);
  }
/*
  else {
  std::cout << " "
  << GG(0) << " " << GG(1) << " " << GG(2) << " " << GG(3) << " "
  << GG(4) << " " << GG(5) << " " << GG(6) << " " << GG(7) << " "
  << GG(8) << " " << GG(9) << " " << GG(10) << " " << GG(11) << " "
  << GG(12) << " " << GG(13) << " " << GG(14) << " " << GG(15) << " " << std::endl;
  }
  return 0;
*/
}

void getPermutations(char operatorBank[],
                     int operatorCount,
                     char* permutation,
                     int permutationLength,
                     int curIndex,
                     int procs,
                     int thisp
  ){
  int i;
  //stop recursion condition
  if(curIndex == permutationLength){
    if ((++num_perm % procs) == thisp) {
      char v[16];
      memset(v,'0',sizeof(v));
      for (int i=0; i<4; i++) {
        v[i*4+key_off] = permutation[i];
      }
/*
      std::string v =
        permutation.substr(0,1) + "000" +
        permutation.substr(1,1) + "000" +
        permutation.substr(2,1) + "000" +
        permutation.substr(3,1) + "000";
*/
      calc(v,sizeof(v));
    }
  }
  else{
    for(i = 0; i < operatorCount; i++){
      permutation[curIndex] = operatorBank[i];
      getPermutations(operatorBank, operatorCount, permutation,
                      permutationLength, curIndex+1, procs, thisp);
    }
  }
}

char* getCmdOption(char ** begin, char ** end, const std::string & option)
{
  char ** itr = std::find(begin, end, option);
  if (itr != end && ++itr != end)
  {
    return *itr;
  }
  return 0;
}

bool cmdOptionExists(char** begin, char** end, const std::string& option)
{
  return std::find(begin, end, option) != end;
}

int main(int argc, char * argv[]) {
  int procs = 1;
  int thisp = 0;
  if (cmdOptionExists(argv, argv + argc, "-o"))
    key_off = std::atoi(getCmdOption(argv, argv + argc, "-o"));
  if (cmdOptionExists(argv, argv + argc, "-p"))
    procs = std::atoi(getCmdOption(argv, argv + argc, "-p"));
  if (cmdOptionExists(argv, argv + argc, "-n"))
    thisp = std::atoi(getCmdOption(argv, argv + argc, "-n"));
  if (cmdOptionExists(argv, argv + argc, "-k")) {
    std::string v = getCmdOption(argv, argv + argc, "-k");
    calc(v.c_str(),v.length());
    std::cout << " "
              << GG(0) << " " << GG(1) << " " << GG(2) << " " << GG(3) << " "
              << GG(4) << " " << GG(5) << " " << GG(6) << " " << GG(7) << " "
              << GG(8) << " " << GG(9) << " " << GG(10) << " " << GG(11) << " "
              << GG(12) << " " << GG(13) << " " << GG(14) << " " << GG(15) << " " << std::endl;
    exit(0);
  }

  int permutationLength = 4;


  char operatorBank[95];

  for (int i=0; i<sizeof(operatorBank); i++) {
    operatorBank[i] = 32+i;
  }

/*
  char operatorBank[] = { '0','1','2','3','4','5','6','7','8','9',
                          'a','b','c','d','e','f','g','h','i','j',
                          'k','l','m','n','o','p','q','r','s','t',
                          'u','v','w','x','y','z',
                          'A','B','C','D','E','F','G','H','I','J',
                          'K','L','M','N','O','P','Q','R','S','T',
                          'U','V','W','X','Y','Z',
                          '_', ' ' };
*/
  //char operatorBank[] = { 'C', 'm', '_' };

  std::cout << "Chars:" << std::endl;
  for (int i=0; i<sizeof(operatorBank); i++) {
    std::cout << "'" << operatorBank[i] << "' ";
  }
  std::cout << std::endl << std::endl;
/*
  std::string permutation;
  permutation.resize(permutationLength);
*/
  char permutation[4];
  //permutation = "0000000000000000";
  int curIndex = 0;
  getPermutations(operatorBank,sizeof(operatorBank),permutation,4,curIndex,procs,thisp);
  return 0;
}
